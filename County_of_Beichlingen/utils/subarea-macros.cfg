#Kills all units on the map but stores them in the given array.
#define KL_STORE_KILL_ALL_UNITS UNITARRAY X Y
{CLEAR_VARIABLE UNITARRAY}
[store_unit]
	[filter]
		x,y={X},{Y}
	[/filter]
	variable={UNITARRAY}
	mode=append
	kill=yes
[/store_unit]
#enddef

#Unstores all units in the given array. It is not checked if the units can be placed on the terrain or if they are on top of each other.
#define KL_UNSTORE_ALL_UNITS UNITARRAY
{FOREACH {UNITARRAY} index}
[unstore_unit]
	variable={UNITARRAY}[$index]
	find_vacant=yes
[/unstore_unit]
{NEXT index}
#enddef

#Macro to change maps during scenario - to change into a subarea like a cave or a house etc.
# 1. AREA is the name of the area you switch to, e.g. "surface" or "cave", it is written into the global "area" variable.
# 2. X/Y_ENTRANCE - the tiles where both areas overlapp, units on these tiles will be available in the new area. Keep in mind a leader has to be present in any area, preferably the hero! If you want more units in the new area, you have to unstore/create and place them afterwards. If you want the entering units to appear on other positions on the map, you have to do that with MOVE_UNIT or something.
# 3. MAP X/Y_POS - the mapfile that is used for the new area and the position where it is placed on the scenarionmap
# 4. LEFTBEHIND_ARRAY - this array will be cleared and all units that are on the map, except those on the entrance-tiles, will be removed from the play, but saved in the array.
# 5. RESTORE_ARRAY - all units in this array will be unstored in the new area. Intended use is for going back from somewhere. The variable will be cleared!
#
# Keep in mind: You can always put units into the LEFTBEHIND_ARRAY or into another array while you are in the subarea, that way they can be restored after going back. For example: Let's say the hero is the only one that can invoke the change of the areas. But while he is in the caves, the player can send units to the exit where they disappear - the units are killed but stored in an array. After the hero leaves the cave, those units can be unstored on the surface as well. However, if it is only a small number of units, it is probably easier to use an entrance-area.
#
#define KL_CHANGEAREAS AREA X_ENTRANCE Y_ENTRANCE MAP X_POS Y_POS LEFTBEHIND_ARRAY RESTORE_ARRAY
{CLEAR_VARIABLE LEFTBEHIND_ARRAY}
{VARIABLE area {AREA}}
{KL_STORE_KILL_ALL_UNITS entering_units {X_ENTRANCE} {Y_ENTRANCE}}
{KL_STORE_KILL_ALL_UNITS {LEFTBEHIND_ARRAY} 1-200 1-200}
[terrain_mask]
	x,y={X_POS},{Y_POS}
	mask="{~add-ons/County_of_Beichlingen/maps/{MAP}}"
	border=yes
[/terrain_mask]
{KL_UNSTORE_ALL_UNITS entering_units}
{KL_UNSTORE_ALL_UNITS {RESTORE_ARRAY}}
{CLEAR_VARIABLE entering_units,{RESTORE_ARRAY}}
#enddef